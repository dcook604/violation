# /etc/nginx/sites-available/violation.spectrum4.ca.conf

server {
    listen 80;
    server_name violation.spectrum4.ca www.violation.spectrum4.ca;

    # Redirect HTTP to HTTPS (Managed by Cloudpanel/Certbot usually)
    # If Cloudflare handles HTTPS, this might not be needed, or adjust as necessary.
    location / {
        return 301 https://$host$request_uri;
    }
    
    # Optional: Let's Encrypt renewal verification
    location ~ /.well-known/acme-challenge/ {
          allow all;
          root /var/www/html; # Or the directory used by your ACME client
    }
}

server {
    listen 443 ssl http2;
    server_name violation.spectrum4.ca www.violation.spectrum4.ca;

    # SSL Configuration (Cloudpanel usually manages this)
    # ssl_certificate /etc/letsencrypt/live/violation.spectrum4.ca/fullchain.pem;
    # ssl_certificate_key /etc/letsencrypt/live/violation.spectrum4.ca/privkey.pem;
    # include /etc/letsencrypt/options-ssl-nginx.conf; 
    # ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; 

    # Security Headers (Optional but recommended)
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header Referrer-Policy "strict-origin-when-cross-origin";
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;
    # add_header Content-Security-Policy "default-src 'self'; ..."; # Define your CSP

    # Path for static files
    location /static {
        alias /home/violation/app/static; # Adjust path to your static folder
        expires 30d;
        add_header Cache-Control "public";
    }
    
    # Path for uploaded files (if served directly)
    location /uploads {
        alias /home/violation/uploads; # Adjust path to your uploads folder
        # Add any access control if needed (e.g., internal;)
        expires 7d;
    }

    # Main application proxy
    location / {
        proxy_pass http://unix:/run/violation/gunicorn.sock; # Match Gunicorn bind
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme; # Important for Flask to know it's HTTPS
        
        # Increase timeouts if needed
        proxy_connect_timeout 75s;
        proxy_read_timeout   300s;
        proxy_send_timeout   300s;
    }
    
    # Error pages (Optional)
    # error_page 500 502 503 504 /50x.html;
    # location = /50x.html {
    #     root /usr/share/nginx/html;
    # }
} 